import { createClient } from '@sanity/client';
import { createGroqBuilder, makeSafeQueryRunner } from 'groqd';
import { apiVersion, projectId, dataset, studioUrl } from '$lib/sanity/api';

// ðŸ‘‡ Import Sanity types, generated by your Sanity project.
import type * as SanityTypes from './sanity.types.ts';

const sanityClient = createClient({
	projectId,
	dataset,
	apiVersion,
	useCdn: process.env.NODE_ENV === 'production', // To always get fresh data in dev mode
	stega: {
		studioUrl,
	},
});

// ðŸ‘‡ Create a type-safe query runner
export const runQuery = makeSafeQueryRunner((query) => sanityClient.fetch(query));

// ðŸ‘‡ Create a type-safe query builder
type SchemaConfig = {
	schemaTypes: SanityTypes.AllSanitySchemaTypes;
	referenceSymbol: typeof SanityTypes.internalGroqTypeReferenceTo;
};
export const q = createGroqBuilder<SchemaConfig>({});
